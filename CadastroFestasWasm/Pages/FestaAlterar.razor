@page "/festa_alterar/{Id}"
@using CadastroFestasWasm.Helpers;
@using CadastroFestaDll.DOs;
@inject NavigationManager NavigationManager;

<h3>Altere os dados da sua Festa    </h3>


    @if (festa == null)
{
    <p><em>Carregando...</em></p>
}
else
{
    <EditForm Model="@festa" OnValidSubmit="@Gravar">
    <DataAnnotationsValidator />
    <ValidationSummary />
        <div>
            <div>
                <label class="form-label">Nome</label>
                <input class="form-control" @bind="@festa.Nome" />
                <ValidationMessage For="() => festa.Nome" />
            </div>
            <div>
                <label class="form-label">Tema</label>
                <input class="form-control" @bind="@festa.Tema" />
                <ValidationMessage For="() => festa.Tema" />
            </div>
            <div>
                <label class="form-label">Data</label>
                <input class="form-control" @bind="@festa.Data" type="date"/>
                <ValidationMessage For="() => festa.Data" />
            </div>
            <div class="mt-2">
                <button class="btn btn-success" type="submit">Gravar</button>
                <a class="ml-1 btn btn-secondary" href="./festas">Voltar</a>
            </div>

            <FestaItem IdMestre=@Id />

            <Imagem Entidade="festa" Id=@Id />

            
        </div>
    </EditForm>
}

@code {
    protected async override Task OnInitializedAsync()
    {        
        festa = await api.RetornarPorIdAsync(Id);
    }

    private AcessoApi<FestaDO> api = new AcessoApi<FestaDO>("api/Festa");

    private FestaDO? festa = null;

    [Parameter]
    public string Id { get; set; } = "";

    private async void Gravar()
    {
        if (festa != null)
        {
            if (await api.AlterarAsync(festa))
            {
                NavigationManager.NavigateTo("festas");
            }
        }
    }
}
